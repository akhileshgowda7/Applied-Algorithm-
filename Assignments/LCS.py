
# Implement a Python program to solve LCS problem using dynamic programming. Run your program to find the best sequence alignment between DNA strings. Show your results.
# Longest Common Sub-sequence (LCS) problem: Given two character strings over some alphabet, find a longest string that is a sub-sequence of given two strings.

def lcs(String_1,String_2 , a, b):
    m = [[0 for x in range(b + 1)] for x in range(a + 1)]

    for i in range(a + 1):
        for j in range(b + 1):
            if i == 0 or j == 0:
                m[i][j] = 0
            elif  String_1[i - 1] ==  String_2[j - 1]:
                m[i][j] = m[i - 1][j - 1] + 1
            else:
                m[i][j] = max(m[i - 1][j], m[i][j - 1])

    index = m[a][b]

    lcs = [""] * (index + 1)
    lcs[index] = ""

    i = a
    j = b
    while i > 0 and j > 0:

        if  String_1[i - 1] ==  String_2[j - 1]:
            lcs[index - 1] =  String_1[i - 1]
            i -= 1
            j -= 1
            index -= 1

        elif m[i - 1][j] > m[i][j - 1]:
            i -= 1
        else:
            j -= 1

    print("S1 : " + String_1 )
    print("S2 : " + String_2)
    print("longest string that is a sub-sequence: " + "".join(lcs))


String_1 = "GGGCGTCTAAANCAATGCTACAGACGCCACATCCCCTGTAATAGAGGAATTAAGTTACTTTCCTTGACCATGCTTTTATAGCCATATCTCTAATCAGCTTCCTGGTATTATATGCCCTGCTCTCAACACTCACAACAAAAGTAACCAATACTAGCATCACAGATGCCCAAGAAATAGAAACTATCTGAAGTAATTTTAACCCGAAATAATCTTAATCCTAATTGCTCTCCCATCTCTACGTATCCTATACCTAACAGATGAAGTCAATGACCCATCCTTCACCATCAAATCAATCGGACACCAGTGATATTTGAACCTACGAATACACGGACTACGGGAGCCTAATTTTCAACTCCTACATACTAGCTCCATTATTCCTAAACCCAGTGGACCTCCTGACTCCTAGAAGTTTGACAATCGGGTAGTCCTTCCAATTGAAGCTCCTGTACGTATCATAATTACATCTCAAGACGTCCTACACTTCATGAACTATCCCCACACTAGGCCTATAAACAGACGCCGTACCTGGGCGTCTAAACCAAACCGTTTTCACGGCTACGCGAGCAGGCGTCTATTACGGACAATGCTCAGAAATCTGTGGCGCAAATCATAGCTTCATACCAATTTGTTGCAGAGCTAATCCCATAAAAATCTTTGAATAGGACC"
String_2 = "GGCGGCGTCTANAAAGGATTCTATTTACCCTATTTTATACTTTGAGCTTTCATAGACTTTTTCTTCCCTTACCTACTGCAGCAAAAAATCACCATGTACCAACCTATCCAAACTTACCCATGGATGAGTCTATCTGGAAGACAGGAGTTTCGATGCTTGTCTTGTTCTGAATGTCTGCTTGTCACCTGCTTAGGGTTATCGACTGTGATTCTGGGACTCGTTGTTGTTCTACAGGACCCCTCTGACTCTGTGGTTTTCTCTACGGGATTAACAATGATAGCCATAGGTGCTTTTTTCATTGTCCTCACTGGAGTGACAGCCCTGTGTACTGTGACAGTCGACGAGAACTTGCAGAAAACCACGAGGCTAAGACTAGGAATGATACGAAAAAGTGGAAGTCTCCAAGGAACTACAGCGCCTTCCACGACTCACTCAGTCATCGCCAGCACCTCGCTGTAGCTGTACATGGAACCCTGGCCTCTTCGTCTTTGGAGCTAAGTCTCCTGAGCATAGTTTTTAACTAGAACTAAAATCTGGCTTTTAAAAAAAACGAACACCAAAA"
a = len(String_1)
b = len(String_2)
lcs(String_1, String_2, a, b)